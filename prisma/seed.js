const { PrismaClient } = require('@prisma/client')
const bcrypt = require('bcryptjs')

const prisma = new PrismaClient()

async function main() {
  console.log('üå± Starting seed...')

  // Create sample buildings
  const building1 = await prisma.building.upsert({
    where: { code: 'A' },
    update: {},
    create: {
      name: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ A',
      code: 'A',
      address: '123 ‡∏ñ‡∏ô‡∏ô‡∏™‡∏∏‡∏Ç‡∏∏‡∏°‡∏ß‡∏¥‡∏ó ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø',
      totalFloors: 10,
      totalUnits: 40
    }
  })

  const building2 = await prisma.building.upsert({
    where: { code: 'B' },
    update: {},
    create: {
      name: '‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ B',
      code: 'B',
      address: '456 ‡∏ñ‡∏ô‡∏ô‡∏™‡∏µ‡∏•‡∏° ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø',
      totalFloors: 8,
      totalUnits: 32
    }
  })

  console.log('‚úÖ Buildings created')

  // Create sample units
  const units = []
  for (let floor = 1; floor <= 5; floor++) {
    for (let unit = 1; unit <= 4; unit++) {
      units.push({
        buildingId: building1.id,
        unitNumber: `A${floor}0${unit}`,
        floor: floor,
        unitType: 'two_br',
        areaSqm: 65.5,
        monthlyFee: 8500.00
      })
    }
  }

  await prisma.unit.createMany({
    data: units,
    skipDuplicates: true
  })

  console.log('‚úÖ Units created')

  // Create sample users
  const hashedPassword = await bcrypt.hash('password123', 10)

  const admin = await prisma.user.upsert({
    where: { email: 'admin@condo.com' },
    update: {},
    create: {
      username: 'admin',
      email: 'admin@condo.com',
      passwordHash: hashedPassword,
      firstName: 'Admin',
      lastName: 'System',
      phone: '0812345678',
      role: 'admin',
      status: 'active'
    }
  })

  const resident = await prisma.user.upsert({
    where: { email: 'resident@condo.com' },
    update: {},
    create: {
      username: 'resident01',
      email: 'resident@condo.com',
      passwordHash: hashedPassword,
      firstName: '‡∏™‡∏°‡∏ä‡∏≤‡∏¢',
      lastName: '‡πÉ‡∏à‡∏î‡∏µ',
      phone: '0823456789',
      role: 'resident',
      status: 'active'
    }
  })

  console.log('‚úÖ Users created')

  // Create product categories
  await prisma.productCategory.createMany({
    data: [
      {
        name: 'Beverages',
        nameTh: '‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°',
        icon: 'ü•§',
        sortOrder: 1
      },
      {
        name: 'Snacks',
        nameTh: '‡∏Ç‡∏ô‡∏°‡∏Ç‡∏ö‡πÄ‡∏Ñ‡∏µ‡πâ‡∏¢‡∏ß',
        icon: 'üçø',
        sortOrder: 2
      },
      {
        name: 'Daily Essentials',
        nameTh: '‡∏Ç‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô',
        icon: 'üß¥',
        sortOrder: 3
      }
    ],
    skipDuplicates: true
  })

  console.log('‚úÖ Product categories created')

  // Create sample products
  const categories = await prisma.productCategory.findMany()
  
  await prisma.product.createMany({
    data: [
      {
        categoryId: categories[0].id,
        name: '‡∏ô‡πâ‡∏≥‡∏î‡∏∑‡πà‡∏°‡∏ï‡∏£‡∏≤‡∏ä‡πâ‡∏≤‡∏á 1.5 ‡∏•‡∏¥‡∏ï‡∏£ ‡πÅ‡∏û‡πá‡∏Ñ 6 ‡∏Ç‡∏ß‡∏î',
        description: '‡∏ô‡πâ‡∏≥‡∏î‡∏∑‡πà‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î ‡∏ö‡∏£‡∏£‡∏à‡∏∏‡∏Ç‡∏ß‡∏î‡∏û‡∏•‡∏≤‡∏™‡∏ï‡∏¥‡∏Å',
        image: 'water-chang-pack6.jpg',
        price: 49.00,
        discountPrice: 42.00,
        stockQuantity: 50,
        unit: '‡πÅ‡∏û‡πá‡∏Ñ'
      },
      {
        categoryId: categories[1].id,
        name: '‡∏°‡∏≤‡∏°‡πà‡∏≤‡∏ï‡πâ‡∏°‡∏¢‡∏≥‡∏Å‡∏∏‡πâ‡∏á ‡πÅ‡∏û‡πá‡∏Ñ 5 ‡∏ã‡∏≠‡∏á',
        description: '‡∏ö‡∏∞‡∏´‡∏°‡∏µ‡πà‡∏Å‡∏∂‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏£‡∏π‡∏õ ‡∏£‡∏™‡∏ï‡πâ‡∏°‡∏¢‡∏≥‡∏Å‡∏∏‡πâ‡∏á',
        image: 'mama-tomyum-pack5.jpg',
        price: 35.00,
        stockQuantity: 30,
        unit: '‡πÅ‡∏û‡πá‡∏Ñ'
      },
      {
        categoryId: categories[2].id,
        name: '‡∏ú‡πâ‡∏≤‡πÄ‡∏ä‡πá‡∏î‡∏´‡∏ô‡πâ‡∏≤ Kleenex',
        description: '‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©‡∏ó‡∏¥‡∏ä‡∏ä‡∏π‡πà‡πÄ‡∏ä‡πá‡∏î‡∏´‡∏ô‡πâ‡∏≤ ‡∏ô‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á',
        image: 'kleenex-facial.jpg',
        price: 25.00,
        stockQuantity: 40,
        unit: '‡∏Å‡∏•‡πà‡∏≠‡∏á'
      }
    ],
    skipDuplicates: true
  })

  console.log('‚úÖ Products created')

  // Create service categories
  await prisma.serviceCategory.createMany({
    data: [
      {
        name: 'Air Conditioning',
        nameTh: '‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏Å‡∏≤‡∏®',
        icon: '‚ùÑÔ∏è',
        description: '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°‡πÅ‡∏ã‡∏°‡πÅ‡∏•‡∏∞‡∏ö‡∏≥‡∏£‡∏∏‡∏á‡∏£‡∏±‡∏Å‡∏©‡∏≤‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏Å‡∏≤‡∏®',
        isRepairService: true
      },
      {
        name: 'Plumbing',
        nameTh: '‡∏á‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏õ‡∏≤',
        icon: 'üîß',
        description: '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°‡πÅ‡∏ã‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏£‡∏∞‡∏õ‡∏≤‡πÅ‡∏•‡∏∞‡∏™‡∏∏‡∏Ç‡∏†‡∏±‡∏ì‡∏ë‡πå',
        isRepairService: true
      },
      {
        name: 'Electrical',
        nameTh: '‡∏á‡∏≤‡∏ô‡πÑ‡∏ü‡∏ü‡πâ‡∏≤',
        icon: '‚ö°',
        description: '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°‡πÅ‡∏ã‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏ü‡∏ü‡πâ‡∏≤',
        isRepairService: true
      },
      {
        name: 'Cleaning',
        nameTh: '‡∏á‡∏≤‡∏ô‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î',
        icon: 'üßπ',
        description: '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏•‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß'
      },
      {
        name: 'Security',
        nameTh: '‡∏á‡∏≤‡∏ô‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢',
        icon: 'üõ°Ô∏è',
        description: '‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢'
      }
    ],
    skipDuplicates: true
  })

  console.log('‚úÖ Service categories created')

  // Create sample facilities
  await prisma.facility.createMany({
    data: [
      {
        name: '‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏° A',
        type: 'meeting_room',
        description: '‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡∏Ç‡∏ô‡∏≤‡∏î‡∏Å‡∏•‡∏≤‡∏á ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö 20 ‡∏Ñ‡∏ô',
        location: '‡∏ä‡∏±‡πâ‡∏ô 2 ‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ A',
        capacity: 20,
        hourlyRate: 200.00,
        advanceBookingDays: 7,
        minBookingHours: 2,
        maxBookingHours: 8,
        createdBy: admin.id,
        amenities: ["‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡πÄ‡∏ï‡∏≠‡∏£‡πå", "‡πÑ‡∏ß‡∏ó‡πå‡∏ö‡∏≠‡∏£‡πå‡∏î", "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏Å‡∏≤‡∏®"],
        rules: ["‡∏´‡πâ‡∏≤‡∏°‡∏™‡∏π‡∏ö‡∏ö‡∏∏‡∏´‡∏£‡∏µ‡πà", "‡∏´‡πâ‡∏≤‡∏°‡∏ô‡∏≥‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤"]
      },
      {
        name: '‡∏™‡∏£‡∏∞‡∏ß‡πà‡∏≤‡∏¢‡∏ô‡πâ‡∏≥',
        type: 'pool',
        description: '‡∏™‡∏£‡∏∞‡∏ß‡πà‡∏≤‡∏¢‡∏ô‡πâ‡∏≥‡∏Ç‡∏ô‡∏≤‡∏î‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô',
        location: '‡∏ä‡∏±‡πâ‡∏ô G ‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ A',
        capacity: 50,
        hourlyRate: 0.00,
        advanceBookingDays: 3,
        minBookingHours: 1,
        maxBookingHours: 4,
        createdBy: admin.id,
        amenities: ["‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏á‡∏ï‡∏±‡∏ß", "‡∏ù‡∏±‡∏Å‡∏ö‡∏±‡∏ß", "‡∏ú‡πâ‡∏≤‡πÄ‡∏ä‡πá‡∏î‡∏ï‡∏±‡∏ß"],
        rules: ["‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏ß‡∏°‡∏ä‡∏∏‡∏î‡∏ß‡πà‡∏≤‡∏¢‡∏ô‡πâ‡∏≥", "‡πÄ‡∏î‡πá‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏õ‡∏Å‡∏Ñ‡∏£‡∏≠‡∏á‡∏î‡∏π‡πÅ‡∏•"]
      },
      {
        name: '‡∏´‡πâ‡∏≠‡∏á‡∏ü‡∏¥‡∏ï‡πÄ‡∏ô‡∏™',
        type: 'gym',
        description: '‡∏´‡πâ‡∏≠‡∏á‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏Ñ‡∏£‡∏ö‡∏Ñ‡∏£‡∏±‡∏ô',
        location: '‡∏ä‡∏±‡πâ‡∏ô 3 ‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£ B',
        capacity: 15,
        hourlyRate: 50.00,
        advanceBookingDays: 1,
        minBookingHours: 1,
        maxBookingHours: 3,
        createdBy: admin.id,
        amenities: ["‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏≠‡∏≠‡∏Å‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Å‡∏≤‡∏¢", "‡∏î‡∏±‡∏°‡πÄ‡∏ö‡∏•", "‡πÄ‡∏™‡∏∑‡πà‡∏≠‡πÇ‡∏¢‡∏Ñ‡∏∞"],
        rules: ["‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏ß‡∏°‡∏£‡∏≠‡∏á‡πÄ‡∏ó‡πâ‡∏≤‡∏ú‡πâ‡∏≤‡πÉ‡∏ö", "‡πÄ‡∏ä‡πá‡∏î‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏´‡∏•‡∏±‡∏á‡πÉ‡∏ä‡πâ"]
      }
    ],
    skipDuplicates: true
  })

  console.log('‚úÖ Facilities created')

  // Create sample announcements
  await prisma.announcement.createMany({
    data: [
      {
        title: '‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏õ‡∏¥‡∏î‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡πÄ‡∏Ç‡πâ‡∏≤-‡∏≠‡∏≠‡∏Å‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß',
        content: '‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°‡πÅ‡∏ã‡∏°‡∏ó‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏õ‡∏≤‡∏´‡∏•‡∏±‡∏Å ‡∏à‡∏∂‡∏á‡∏Ç‡∏≠‡∏õ‡∏¥‡∏î‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡πÄ‡∏Ç‡πâ‡∏≤-‡∏≠‡∏≠‡∏Å‡∏ó‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß ‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 15-20 ‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå 2567',
        announcementType: 'maintenance',
        priority: 'high',
        targetAudience: 'all',
        startDate: new Date('2024-02-15'),
        endDate: new Date('2024-02-20'),
        isPinned: true,
        createdBy: admin.id,
        status: 'published'
      },
      {
        title: '‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏á‡∏≤‡∏ô‡∏™‡∏±‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô',
        content: '‡∏Ç‡∏≠‡πÄ‡∏ä‡∏¥‡∏ç‡∏ä‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏≠‡∏≤‡∏®‡∏±‡∏¢‡∏ó‡∏∏‡∏Å‡∏ó‡πà‡∏≤‡∏ô‡∏£‡πà‡∏ß‡∏°‡∏á‡∏≤‡∏ô‡∏™‡∏±‡∏á‡∏™‡∏£‡∏£‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ‡∏ß‡∏±‡∏ô‡πÄ‡∏™‡∏≤‡∏£‡πå‡∏ó‡∏µ‡πà 10 ‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå ‡πÄ‡∏ß‡∏•‡∏≤ 18:00 ‡∏ô. ‡∏ì ‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°‡∏ä‡∏±‡πâ‡∏ô 2',
        announcementType: 'event',
        priority: 'medium',
        targetAudience: 'all',
        startDate: new Date('2024-02-01'),
        endDate: new Date('2024-02-10'),
        createdBy: admin.id,
        status: 'published'
      }
    ],
    skipDuplicates: true
  })

  console.log('‚úÖ Announcements created')

  // Create system settings
  await prisma.systemSetting.createMany({
    data: [
      {
        settingKey: 'site_name',
        settingValue: 'Community Living Management',
        settingType: 'string',
        description: '‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå',
        isPublic: true
      },
      {
        settingKey: 'delivery_fee',
        settingValue: '20',
        settingType: 'number',
        description: '‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤',
        isPublic: true
      },
      {
        settingKey: 'free_delivery_threshold',
        settingValue: '300',
        settingType: 'number',
        description: '‡∏¢‡∏≠‡∏î‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏ü‡∏£‡∏µ',
        isPublic: true
      },
      {
        settingKey: 'contact_phone',
        settingValue: '02-123-4567',
        settingType: 'string',
        description: '‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠',
        isPublic: true
      },
      {
        settingKey: 'contact_email',
        settingValue: 'info@community.com',
        settingType: 'string',
        description: '‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠',
        isPublic: true
      }
    ],
    skipDuplicates: true
  })

  console.log('‚úÖ System settings created')
  console.log('üéâ Seed completed successfully!')
}

main()
  .catch((e) => {
    console.error('‚ùå Seed failed:', e)
    process.exit(1)
  })
  .finally(async () => {
    await prisma.$disconnect()
  })